var fs = require('fs');
var coa = require('coa');
var rootCommand = module.exports.rootCommand = coa.Cmd();

var path = require('path');
coa.Cmd.prototype.loadCommands = function(directory) {
    var cmd = this;
    
    var commandsDir = path.join(directory, 'commands');
    var files = fs.readdirSync(commandsDir);
    var commands = cmd.commands = files.map(function(command) {
        var commandPath = path.join(commandsDir, command);
        var commandModule = commandPath;
        
        var stat = fs.statSync(commandPath);
        var isDirectory = stat.isDirectory();
        if (isDirectory) {
            // This command is a package (e.g. directory), rather than
            // a simple file, so the command definition module is
            // the command.js file inside the command directory
            commandModule = path.join(commandPath, 'command.js');
        }
        
        return {
            name: command,
            path: commandPath,
            module: commandModule,
            package: isDirectory
        };
    });
    
    // Load each of the commands
    commands.forEach(function(command) {
        // Load the command from the external module
        var module = command.module = require(command.module);
        
        try {
            command.cmd = cmd.cmd();
            
            // Initialize the command module
            if (module.load) {
                module.load();
            }
            
            // Now add the command as a coa subcommand if it loaded successfully
            command.cmd.name(command.name).apply(module.COA).end();
        }
        catch(e) {
            if (e.code === 'MODULE_NOT_FOUND') {
                // The command dependencies have probably not been installed properly
                console.error('Failed to load command "%s"!', command.name);
                console.error('Try running "appdev install" to install command dependencies');
            }
            else {
                throw e; // rethrow exception
            }
        }
    });
    
    // Add the install command to install command dependencies
    cmd.cmd() // inplace subcommand definition
        .name('install').title('Install dependencies').helpful()
        .act(function() {
            var npm = require('npm');
            npm.load({}, function(err) {
                if (err) throw err;
                
                require('async').eachSeries(commands, function(command, callback) {
                    console.log('Updating command %s...', command.name);
                    
                    if (command.package) {
                        // Install this command if it is a package and not a single-file command
                        npm.localPrefix = command.path;
                        npm.commands.update([], callback);
                    }
                    
                    // Install subcommands if present
                    var installCmd = command.cmd._cmdsByName.install;
                    if (installCmd) {
                        installCmd.act();
                    }
                }, function(err) {
                    if (err) throw err;
                });
            });
            // Echo npm output to the console
            npm.on('log', function(message) {
                console.log(message);
            });
        })
        .end(); // end subcommand definition
    
    return this;
};
